Items:
  runtime: python3.11
  handler: functions/items/lambda_items.lambda_handler
  name: "${sls:stage}-${self:service}-items"
  package:
    patterns:
      - '!**/**'
      - "functions/items/**"
      - "_pydantic/**"
  environment:
      STAGE_NAME: ${sls:stage}
  layers:
      - !Ref UtilsLambdaLayer
      - !Ref PydanticLambdaLayer
  events:
      - httpApi:
          path: /{organisation}/{event}/items
          method: get
          authorizer:
            adminAuthorizer
          documentation: ${file(functions/items/sls.items.doc.yml):endpoints.items.GETall} 
      - httpApi:
          path: /{organisation}/{event}/items/{ksuid}
          method: get
          authorizer:
            adminAuthorizer
          documentation: ${file(functions/items/sls.items.doc.yml):endpoints.items.GETone}
      - httpApi:
          path: /{organisation}/{event}/items
          method: post
          authorizer:
            adminAuthorizer
          documentation: ${file(functions/items/sls.items.doc.yml):endpoints.items.POST}
      - httpApi:
          path: /{organisation}/{event}/items/{ksuid}
          method: put
          authorizer:
            adminAuthorizer
          documentation: ${file(functions/items/sls.items.doc.yml):endpoints.items.PUT}
      - httpApi:
          path: /public/{organisation}/{event}/items/{ksuid}
          method: get
          documentation: ${file(functions/items/sls.items.doc.yml):endpoints.items.GETpub} 
      - httpApi:
          path: /public/{organisation}/{event}/items
          method: get
          documentation: ${file(functions/items/sls.items.doc.yml):endpoints.items.GETallpub} 

