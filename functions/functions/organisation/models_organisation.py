# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-04-22T02:03:12+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field

class Status(Enum):
    draft = 'draft'
    live = 'live'
    archived = 'archived'
    outdated = 'outdated'


class OrganisationObject(BaseModel):
    name: str = Field(..., description='The name of the event.', min_length=2)
    description: Optional[str] = None
    status: Optional[Status] = 'draft'
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None
    version: Optional[int] = None

class OrganisationObjectPublic(BaseModel):
    name: str = Field(..., description='The name of the event.', min_length=2)
    description: Optional[str] = None
    status: Optional[Status] = 'draft'
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None


class UpdateEventRequest(BaseModel):
    event: OrganisationObject


class OrganisationResponse(BaseModel):
    event: Optional[OrganisationObject] = None


class OrganisationListResponse(BaseModel):
    events: Optional[List[OrganisationObject]] = None


class OrganisationResponsePublic(BaseModel):
    event: Optional[OrganisationObject] = None


class OrganisationListResponsePublic(BaseModel):
    events: Optional[List[OrganisationObject]] = None
