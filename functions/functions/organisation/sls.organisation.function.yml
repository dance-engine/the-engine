Organisation:
  runtime: python3.11
  handler: functions/organisation/lambda_organisation.lambda_handler
  name: "${sls:stage}-${self:service}-organisation"
  package:
    patterns:
      - '!**/**'
      - "functions/organisation/**"
      - "_shared/**"
      - "_pydantic/**" 
  environment:
    ORG_TABLE_NAME_TEMPLATE: ${self:custom.dynamodb_table_format}
  layers:
    - !Ref UtilsLambdaLayer
    - !Ref PydanticLambdaLayer
  events:
    - httpApi:
        path: /{organisation}/settings
        method: get
        authorizer:
          adminAuthorizer
        documentation: ${file(functions/organisation/sls.organisation.doc.yml):Organisation.GET} 
    - httpApi:
        path: /{organisation}/settings
        method: put
        authorizer:
          adminAuthorizer
        documentation: ${file(functions/organisation/sls.organisation.doc.yml):Organisation.UPDATE}
        
EventbridgeOrganisation:
  runtime: python3.11
  handler: functions/organisation/lambda_organisation.eventbridge_handler
  name: "${sls:stage}-${self:service}-eventbridge-organisation"
  package:
    patterns:
      - '!**/**'
      - "functions/organisation/**"
      - "_shared/**"
      - "_pydantic/**"
  environment:
    CORE_TABLE_NAME: ${self:custom.core_table_name}
    ORG_TABLE_NAME_TEMPLATE: ${self:custom.dynamodb_table_format}
  layers:
    - !Ref UtilsLambdaLayer
    - !Ref PydanticLambdaLayer
  events:
    - eventBridge:
        pattern:
          source:
            - "dance-engine.core"
          detail-type:
            - "organisation.updated"