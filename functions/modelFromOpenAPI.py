# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2025-04-04T21:08:58+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel


class Location(BaseModel):
    name: Optional[str] = None
    address: Optional[str] = None
    lat: Optional[float] = None
    lng: Optional[float] = None
    ksuid: Optional[str] = None


class Event(BaseModel):
    ksuid: Optional[str] = None
    banner: Optional[str] = None
    event_slug: Optional[str] = None
    organisation: Optional[str] = None
    type: Optional[str] = None
    name: Optional[str] = None
    starts_at: Optional[datetime] = None
    ends_at: Optional[datetime] = None
    category: Optional[List[str]] = None
    capacity: Optional[int] = None
    number_sold: Optional[int] = None
    description: Optional[str] = None
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None
    location: Optional[Location] = None


class Location2(BaseModel):
    name: str
    address: Optional[str] = None
    lat: float
    lng: float
    ksuid: Optional[str] = None


class CreateEventRequest(BaseModel):
    name: str
    starts_at: datetime
    ends_at: datetime
    banner: Optional[str] = None
    category: Optional[List[str]] = None
    capacity: int
    description: Optional[str] = None
    location: Location2


class Location3(Location):
    pass


class Event1(BaseModel):
    ksuid: Optional[str] = None
    banner: Optional[str] = None
    event_slug: Optional[str] = None
    organisation: Optional[str] = None
    type: Optional[str] = None
    name: Optional[str] = None
    starts_at: Optional[datetime] = None
    ends_at: Optional[datetime] = None
    category: Optional[List[str]] = None
    capacity: Optional[int] = None
    number_sold: Optional[int] = None
    description: Optional[str] = None
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None
    location: Optional[Location3] = None


class EventResponse(BaseModel):
    message: Optional[str] = None
    event: Optional[Event1] = None


class EventListResponseItem(Event1):
    pass


class EventListResponse(BaseModel):
    __root__: List[EventListResponseItem]


class ErrorResponse(BaseModel):
    message: Optional[str] = None
    error: Optional[str] = None


class Organisation(BaseModel):
    __root__: str


class Ksuid(Organisation):
    pass
