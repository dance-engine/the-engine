Organisations:
  runtime: python3.11
  handler: privileged/organisations/lambda_organisations.lambda_handler
  name: "${sls:stage}-${self:service}-organisations"
  role: DeployOrgRole
  package:
    patterns:
      - '!**/**'
      - "privileged/organisations/**"
      - "_shared/**"
      - "_pydantic/**"
  environment:
    STAGE_NAME: ${sls:stage}
    TEMPLATE_URL: https://${self:custom.config_bucket}.s3.amazonaws.com/cloudformation/organisation.yaml
    CORE_TABLE_NAME: ${self:custom.core_table_name}
    ORG_TABLE_NAME_TEMPLATE: ${self:custom.dynamodb_table_format}
  layers:
    - !Ref UtilsLambdaLayer
    - !Ref PydanticLambdaLayer
  events:
    - httpApi:
        path: /organisations
        method: get
        authorizer:
          adminAuthorizer
        documentation: ${file(privileged/organisations/sls.organisations.doc.yml):Organisations.GET}
    - httpApi:
        path: /organisations
        method: post
        authorizer:
          adminAuthorizer
        documentation: ${file(privileged/organisations/sls.organisations.doc.yml):Organisations.POST}